{
  "name": "dynamic-routes",
  "version": "0.0.3",
  "description": "Dynamic routes for Express.JS",
  "main": "./lib/dynamic-routes.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [
    "express",
    "dynamic-routes",
    "web",
    "app"
  ],
  "author": {
    "name": "Remo Zumsteg",
    "email": "remo.zumsteg@outlook.com",
    "url": "remolueoend"
  },
  "license": "Apache v2.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/remolueoend/dynamic-routes.git"
  },
  "dependencies": {
    "express": ">= 3.x",
    "body-parser": ">= 1.2.0"
  },
  "readme": "# dynamic-routes\n\n> A dynamic router / loader for http://expressjs.com/\n\n## Install\n\n``` bash\nnpm install dynamic-routes --save\n```\n\n\n## Usage\n\n> **DynamicRoutes(app, path_to_routes, [options])**\n\n\n## Examples :\n\n#### Express.JS Server :\n\n```js\nvar express = require('express'),\n\thttp = require('http'),\n\tpath = require('path'),\n\tDynamicRoutes = require('dynamic-routes'),\n\tapp = express();\n\napp.set('port', process.env.PORT || 3000);\napp.set('views', __dirname + '/views');\napp.use(express.logger('dev'));\napp.use(bodyParser());\napp.use(express.methodOverride());\napp.use(express.cookieParser('secrets secrets, we got extra'));\napp.use(express.session());\napp.use(app.router);\napp.use(express.static(path.join(__dirname, 'public')));\n\nif ('development' == app.get('env')) {\n\tapp.use(express.errorHandler());\n}\n\nDynamicRoutes(app, __dirname + '/routes/');\n// or\n\n/*\nDynamicRoutes(app, {\n\tsrc: __dirname + '/routes/',\n\tignore: [],\n\tpattern: /\\.js$/\n});\n*/\n\nhttp.createServer(app).listen(app.get('port'), function(){\n\tconsole.log('Express server listening on port ' + app.get('port'));\n});\n\n```\n#### Creating compatible routes :\n\n##### Using an object :\n\n```js\n//routes/index.js\nmodule.exports = {\n\tpriority: 1000, //this is the `/` handler, should it should be the last route.\n\tpath: '/',\n\n\t//this function gets passed the express object one time for any extra setup\n\tinit: function(app) {\n\t\t//app.head doesn't work with newer express.js \n\t},\n\n\tGET: function(req, res) {\n\t\tres.end('GET ');\n\t},\n\t\n\tPOST: function(req, res) {\n\t\tres.json(req.body);\n\t}\n};\n```\n\n##### Using a function :\n\n```js\nvar user = module.exports = function(app) {\n\t\"use strict\";\n\t//other setup\n\tapp.get(function(req, res) {\n\t\tres.json({'user': [req.params.id, req.params, req.query, req.body]});\n\t});\n};\n\nuser.priority = 1;\nuser.path = '/user/:id?';\n\n```\n\n##### This is equivalent to :\n\n\n```js\nmodule.exports = {\n\tpath: '/user/:id?',\n\tpriority: 1,\n\tinit: function (app) {\n\t\t//setup db\n\t},\n\t\n\tGET: function(req, res) {\n\t\tres.json({'user': [req.params.id, req.params, req.query, req.body]});\n\t}\n}\n```\n\n## Notes\n- As of Express 4.x, it's recommended to use `require('body-parser')()` instead of `express.bodyParser()`, check [`this`](http://stackoverflow.com/questions/5710358/how-to-get-post-query-in-express-node-js/20132867#20132867).",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/remolueoend/dynamic-routes/issues"
  },
  "homepage": "https://github.com/remolueoend/dynamic-routes",
  "_id": "dynamic-routes@0.0.3",
  "_shasum": "c8cbe6767308de2cb9535a560e51690c463a81b4",
  "_from": "https://github.com/remolueoend/dynamic-routes/tarball/master",
  "_resolved": "https://github.com/remolueoend/dynamic-routes/tarball/master"
}
